const lang = new Map<string, string>()

lang.set("CHECK_LANGUAGE", "Using English")
lang.set("ID_NOT_EXIST", "Id doesn't exist")
lang.set("REQUEST_SUCCEED", "Request succeed")

lang.set("WALLET_UPDATE_ERROR", "Update wallet is not success")
lang.set("WALLET_NOT_ENOUGH_MONEY", "Wallet not enough money")
lang.set("NOT_SUPPORT_THIS_PROMOTION", "Not support this promotion type.")


lang.set("INTERNAL_SERVER_ERROR", "Internal Server Error")
lang.set("UNKNOWN_ERROR", "An error occurred, please try again")
lang.set("UNKNOWN_QUERY_ERROR", "An error occurred, please try again")
lang.set("UNKNOWN_DATABASE_ERROR", "An error occurred, please try again")

lang.set("USER_NOT_PERMIT", "User is not permitted")
lang.set("JOB_APPLYING_JOB_EXPIRED", "Job was expired or Employer did not accept any new applying.")
lang.set("JOB_APPLYING_JOB_APPIED_LIMIT", "Please wait for some minutes to re-apply")
lang.set("USER_NOT_EXIST", "User doesn't exist")
lang.set("USER_CODE_ALREADY_EXISTS", "User code is already in use")
lang.set("USER_PHONE_NUMBER_ALREADY_EXISTS", "Phone number/email is already in-use")
lang.set("PROVINCE_NOT_EXIST", "Province doesn't exist")
lang.set("DISTRICT_NOT_EXIST", "District doesn't exist")
lang.set("WORKKING_TIME_TO_MUST_GREATER_FROM", "WorkingTimeTo must greater than WorkingTimeFrom")
lang.set("WORKING_SHORT_TIME_TO_MUST_GREATER_FROM", "Working Short Time From must less than Working Short Time To")

lang.set("VALIDATION_INPUT_TYPE_ERROR", "Invalid input data type")
lang.set("VALIDATION_INPUT_ERROR", "Invalid input data")
lang.set("INVALID_USER_CODE", "Invalid user code")
lang.set("INVALID_PHONE_NUMBER", "Invalid phone number")
lang.set("PAGE_OUT_OF_RANGE", "Page number out of range")
lang.set("SEARCH_ITEM_NOT_FOUND", "Not found any item")

lang.set("INSERT_ERROR", "Insert is failed")
lang.set("INSERT_SUCCESS", "Insert successfully")
lang.set("UPDATE_ERROR", "Update is failed")
lang.set("UPDATE_SUCCESS", "Update successfully")
lang.set("RECORD_NOT_FOUND", "No results were found")
lang.set("BUY_SERVICE_SUCCESS", "Buy service successfully")

lang.set("DELETE_SUCCESS", "Delete successfully")
lang.set("DELETE_ERROR", "Delete is failed")
//view post job
lang.set("TIME_VIEW_JOB_LIMIT", "Each time viewing the work is 10 minutes apart ")
//Group
lang.set("GROUP_NAME_ALREADY_EXIST", "Group name is already in use")
lang.set("GROUP_NOT_EXIST", "Group doesn't exist")
lang.set("OVER_GROUP_LIMIT", "The number of times to create a group has been exceeded ")
lang.set("DUPLICATE_USERS_IN_GROUP", "The user already exists in this group ")

//item type code
lang.set("ITEM_EXIST", "Maybe this code was exist")
lang.set("ITEM_NOT_EXIST", "This code was not exist")
lang.set("CODE_MUST_EXIST", "Code cannot be left blank ")
lang.set("USE_LIMIT_MUST_GREATER_USED", "the number of users must not exceed the limit ")

lang.set("JOB_WAS_HOT", "Job was hot")
lang.set("JOB_NOT_EXIST", "Job not exist")
lang.set("JOB_PARTIME_NEED_TIME_FROM_TO", "Partime work must time start and time end")
lang.set("JOB_CAN_NOT_GET_DELETED_JOBS", "User can get jobs were deleted.")
lang.set("JOB_EXP_REQUIRED_MUST_INPUT_EXPERIENCE_ID", "Not input work experience time")
lang.set("JOB_UPDATE_SUCCESSFULLY", "Update job successfully")
lang.set("JOB_CHANGE_STATUS_SUCCESSFULLY", "Chang job's status successfully")
lang.set("JOB_CREATE_SUCCESSFULLY", "Create job successfully")
lang.set("SAVE_JOB_EXIST", "Job was saved")
lang.set("SAVE_JOB_NOT_EXIST", "You not yet have save this job")
lang.set("JOB_CATEGORY_NOT_EXIST", "Category not exist")
lang.set("JOB_APPLYING_ALREADY_EXIST", "Job applying already exist")
lang.set("JOB_APPLYING_NOT_EXIST", "Job applying not exist")
lang.set("JOB_APPLYING_SUCCESSFULLY", "Apply job successfully")
lang.set("EMPLOYER_NOTE_IS_NOT_NULL", "EMPLOYER note is not null")
lang.set("EMPLOYER_NOT_PERMIT", "EMPLOYER is not permitted")
lang.set("HIRINGSTATUS_IS_REQUIRED", "HIRINGSTATUS is required")
lang.set("HIRINGSTATUS_UPDATE_VALID_IN_1_OR_2", "HIRINGSTATUS update valid in 1 or 2")
lang.set("USER_NOT_PERMIT_UPDATE_STATUS_AND_NOTE", "USER not permit update status and note")
lang.set("JOB_CREATE_ONLY_HAVE_STATUS_DRAFF_OR_CENSORE", "Job only have draff or censore when it was created")
lang.set("JOB_WAGE_MIN_MUST_LESS_THAN_WAGE_MAX", "Min Wage must less than Max Wage")
lang.set("JOB_START_TIME_MUST_GREATER_THAN_CURRENT", "Job's startTime must greater than current")
lang.set("EXPERIENCE_NOT_EXIST", "The Experience not exist")
lang.set("JOB_FROM_AGE_MUST_LESS_THAN_TO_AGE", "From age must less than to age")
lang.set("EDUCATION_LEVEL_NOT_EXIST", "Education level not exist")
lang.set("JOB_BENEFIT_HAVE_ITEM_NOT_EXIST", "Exist a item benefit not exist")
lang.set("JOB_CATEGORY_HAVE_A_ITEM_NOT_EXIST", "Job's categories have a category not exist")
lang.set("JOB_CATEGORY_EXP_REQUIRED_HAVE_A_ITEM_NOT_EXIST", "Job's experience required categories have a category not exist")
lang.set("JOB_YOU_MUST_BUY_SERVICE_AND_USE_POST_JOB_SERVICE", "Need use some services post Job")
lang.set("JOB_YOU_CAN_NOT_CHANGE_JOB_STATUS_WHEN_UPDATE", "You can not change status when update")
lang.set("JOB_STATUS_MUST_DIFF_OLD_STATUS", "Job's status must not same old status")
lang.set("JOB_NOT_PERMISSION_CHANGE_STATUS", "You have not permission change this status")
lang.set("JOB_MUST_USE_UGENT_SERVICE", "You must use Ugent service package, you can post urgent job")
lang.set("JOB_CAN_NOT_UPDATE_URGENT_JOB", "Can not change Job's urgent status")
lang.set("JOB_OLD_CAN_NOT_SET_HOT_OR_EXTEND", "Job's too old, you can not extend or set become hot Job")
lang.set("JOB_WORKING_TIME_INVALID", "Wowrking time for search jons not invalid.")

lang.set("REASON_DELETE_NOT_EXIST", "Reason delete not exist")
lang.set("NOTE_DELETE_IS_REQUIRED", "Note_delete is required")
lang.set("NOTE_DELETE_NOT_APPLY_IN_THIS_REASON", "Not_delete not applicable in this reason")

lang.set("REASON_REFUSE_NOT_EXIST", "Reason refuse not exist")
lang.set("REASON_REFUSE_IS_REQUIRED", "Note refuse is required")
lang.set("NOTE_REFUSE_NOT_APPLY_IN_THIS_REASON", "Note refuse not applicable in this reason")
lang.set("NOTE_REFUSE_IS_REQUIRED", "Note refuse is required")
lang.set("REASON_REJECT_NOT_APPLY_IN_THIS_CASE", "Reason not applicable in this case")

lang.set("DICTRICT_MUST_INPUT", "You not yet input dictrict")
lang.set("LATITUDE_AND_LONGITUDE_MUST_INPUT", "You not yet input latitude or longitude")

lang.set("COMPANY_NOT_EXIST", "Company not exist")
lang.set("USER_NOT_COMPANY_EXIST", "User not in company")
lang.set("COMPANY_NAME_IS_NOT_NULL", "Company name is required")
lang.set("COMPANY_DESC_IS_NOT_NULL", "Company desc is required")
lang.set("ISVERIFIED_VALID_IN_0_OR_1", "ISVERIFIED valid in 0 or 1")
lang.set("INDUSTRYID_IS_VALID_NUMBER", "INDUSTRYID is valid number")
lang.set("USER_HAVE_NOT_THIS_ADDRESS", "User have not this address")
lang.set("COMPANY_HAVE_NOT_THIS_ADDRESS", "Company have not this address")
lang.set("COMPANY_EE_CAN_NOT_CREATE", "Employee can not create company")
lang.set("DISTRICT_NOT_IN_PROVINCE", "The district not in a province")

lang.set("USER_SALARY_EXPECT_INVALID", "You must input expect salary include: from, to and unit")
lang.set("USER_SALARY_FROM_MUST_LESS_tO_SALARY", "Expect salary from must less than salary to")

lang.set("FAVOURITE_CATEGORY_NOT_EXIST", "Favourite category does not exist")
lang.set("USER_FAVOURITE_CATEGORY_ALREADY_EXIST", "Category of user exists")

lang.set("COMPANY_ROLE_UPDATE_TITLE", "Role in company changed")
lang.set("COMPANY_ROLE_UPDATE_DETAIL", "Your new role in the company :company is :role")
lang.set("COMPANY_ROLE_REJECTED_TITLE", "You have been rejected")
lang.set("COMPANY_ROLE_REJECTED_DETAIL", "You have been rejected from thre company: :company")
lang.set("COMPANY_JOIN_REQUEST_TITLE", "Company joining request")
lang.set("COMPANY_JOIN_REQUEST_DETAIL", ":user is requseting to join your company.")
lang.set("COMPANY_ROLE_ADMIN", "Admin")
lang.set("COMPANY_ROLE_AGENT", "Agent")
lang.set("COMPANY_ROLE_PENDING", "Pending")


// service and promotion
lang.set("SERVICE_NOT_EXIST", "SERVICE not exist")
lang.set("SERVICE_DONATE_NOT_EXIST", "SERVICE DONATE not exist")
lang.set("SERVICE_NAME_NOT_NULL", "SERVICE NAME is not null")
lang.set("SERVICE_DESC_NOT_NULL", "SERVICE DESC is not null")
lang.set("SERVICE_CODE_NOT_NULL", "SERVICE CODE is not null")
lang.set("PROMOTION_PACKAGE_NOT_EXIST", "PROMOTION PACKAGE not exist")
lang.set("PROMOTION_TYPE_NOT_EXIST", "PROMOTION_TYPE not exist")
lang.set("PROMOTION_TYPE_ALREADY_EXIST", "PROMOTION TYPE already exist")
lang.set("ITEM_TYPE_CODE_IS_REQUIRED", "ITEM TYPE CODE is required")
lang.set("ITEM_TYPE_NOT_EXIST", "ITEM TYPE not exist")
lang.set("ITEM_TYPE_CODE_IS_USED", "ITEM TYPE CODE is used")
lang.set("PROMOTION_TYPE_CODE_IS_NOT_NULL", "PROMOTION TYPE CODE is not null")
lang.set("PROMOTION_NAME_IS_NOT_NULL", "PROMOTION NAME is not null")
lang.set("PROMOTION_DESC_IS_NOT_NULL", "PROMOTION DESC is not null")
lang.set("PROMOTION_PARAM_IS_REQUIRED", "PROMOTION PARAM is required")
lang.set("SERVICE_DONATE_IS_REQUIRED", "SERVICE DONATE is required")
lang.set("QUANTITY_DONATE_SERVICE_IS_REQIRED", "QUANLITY DONATE SERVICE is required")
lang.set("QUANTITY_BUY_SERVICE_IS_REQUIRED", "QUANTITY BUY SERVICE is required")
lang.set("CONTACT_SERVICE_IS_REQUIRED", "You need to have: contact employer/candidate service.")
lang.set("BASEPRICE_NOT_VALID", "BASEPRICE not valid")
lang.set("FROMTIME_NOT_VALID", "FROMTIME not valid")
lang.set("TOTIME_NOT_VALID", "TOTIME not valid")
lang.set("FROMTIME_MUST_BE_SMALLER_TOTIME", "FROMTIME must be smaller TOTIME")
lang.set("BUYLIMIT_NOT_VALID", "BUY_LIMIT not valid")
lang.set("USENOW_VALID_IN_0_OR_1_OR_2", "USER_NOW valid in 0 or 1 or 2")
lang.set("USE_NOW_NOT_EXIST", "USE NOW not exist")
lang.set("ITEM_TYPE_NOT_APPLY_IN_THIS_PROMOTION", "Item_type not applicable in this promotion")
lang.set("SERVICE_ID_DONATE_NOT_IN_THIS_PROMOTION", "Service_id_donate not applicable in this promotion")
lang.set("QUALITY_NOT_APPLY_IN_THIS_PROMOTION", "Quality not applicable in this promotion")
lang.set("USER_SCHEDULE_NOT_EXIT", "User's schedule does not exist")
lang.set("QUANTITY_DONATE_NOT_APPLY_IN_THIS_PROMOTION", "Donate quantity not applicable in this promotion")
lang.set("PROMOTION_PARAM_NOT_APPLY_IN_THIS_PROMOTION", "PROMOTION_PARAM not applicable in this promotion")
lang.set("PROMOTION_PACKAGE_TO_LIMIT", "Promotion's limit is max or the quantity is exceed")
lang.set("SERVICE_CAN_NOT_USE_SERVICE_OF_OTHER_PERSON", "You can not use service of other person")
lang.set("SERVICE_BUY_HAVE_A_ITEM_NOT_EXIST", "Any service not avalable for you")
lang.set("WORKKING_OF_JOB_MUST_FOLLOW_SHIFT_OR_INPUT_FROM_TO_TIME", "Working time must follow Shifts or in put custom time")
lang.set("SHIFT_NOT_EXITS", "Shift not exist")
lang.set("INCOMPLETE_WORK_SHIFT_DATA", "Incomplete work shift data")
lang.set("APPLICATION_DEADLINE_MUST_BE_GREATER_THAN_THE_CURRENT_TIME", "Application deadline must be greater than the current time")
lang.set("WORKING_SHOR_TIME_FROM_MUST_BE_GREATER_THAN_CURRENT_TIME", "wokingShortTimeFrom must be greater than current time")

// BUY SERVICE
lang.set("BUY_SERVICE_FAILED_BESCAUSE_CAN_NOT_SAVE_TRANSACTION", "An error occurred when save transaction, please try again")
lang.set("BUY_SERVICE_USE_NOW_BUT_EXIST_SERVICE_NOT_USE_NOW", "Exist service can not use its now")
lang.set("BUY_SERVICE_NOT_USE_NOW_BUT_EXIST_SERVICE_USE_NOW", "Exist service only use its now")
lang.set("USER_SERVICE_UPDATE_SERVICE_NUMBER_ERROR", "Update amount of service is not success")
lang.set("USER_SERVICE_NOT_ENOUGH_SERVICE", "amount of your services not enough")


lang.set("SERVICE_HAVE_A_ITEM_NOT_EXIST", "List services have a service that does not exist")
lang.set("SERVICE_HAVE_A_ITEM_NOT_APPLY_FOR_USER", "Service can not apply for user")
lang.set("PROMOTION_HAVE_A_ITEM_NOT_EXIST", "List promotions has a promotion that does not exist")
lang.set("SERVICE_QUANTITY_HAVE_A_ITEM_EXCEEDING", "Service quantity has a service exceeding")
lang.set("ACCOUNT_IS_NOT_ENOUGH_TO_MAKE_TRANSACTION", "Your account is not enough to make transactions")
lang.set("BUY_AND_USE_SERVICE_SUCCESS", "Buy and use services successfully!")
lang.set("USE_SERVICE_SUCCESS", "Use services successfully!")
lang.set("USE_SERVICE_MISSING_PARAM", "Not enough parameters!")

// Keyword search
lang.set("KEYWORD_SEARCH_NOT_NULL", "Keyword search is not null")

//enum data
lang.set("Draff", "Draff")
lang.set("Censored", "Censored")
lang.set("Posted", "Posted")
lang.set("Expired", "Expired")
lang.set("Deleted", "Deleted")
lang.set("Completed", "Completed")

lang.set("Partime", "Partime")
lang.set("Fulltime", "Fulltime")

lang.set("Once", "Once")
lang.set("Oneoff", "Oneoff")
lang.set("Hourly", "Hourly")
lang.set("Daily", "Daily")
lang.set("Weekly", "Weekly")
lang.set("Monthly", "Monthly")

lang.set("All", "All")
lang.set("Sunday", "Sunday")
lang.set("Monday", "Monday")
lang.set("Tuesday", "Tuesday")
lang.set("Wednesday", "Wednesday")
lang.set("Thursday", "Thursday")
lang.set("Friday", "Friday")
lang.set("Saturday", "Saturday")

lang.set("Time", "Time")
lang.set("Shift", "Shift")

lang.set("Other", "Other")
lang.set("Male", "Male")
lang.set("Female", "Female")
lang.set("JOB_CREATED_NOTI", "':job' seems suitable for you. Click for more information!")
lang.set("JOB_APPLY_NOTI", "There's a candidate for ':job'. Let's take a look!")
lang.set("JOB_CAN_APPLY_FOR_YOU", "':job' has just been posted. Let's take a look!")
lang.set("JOB_APPLY_ACCEPTED_NOTI", "Congrats! You've been accepted for ':job'. Let's take a look!")
lang.set("JOB_APPLY_REJECTED_NOTI", "You've been rejected for ':job'. Find out why?")

lang.set("CANT_CALL_YOURSELF", "Can not call yourself.")
lang.set("CANT_CALL_USER_NOT_AVAILABLE", "User is not available.")
lang.set("CANT_CALL_JOB_IS_NOT_AVAILABLE", "The job is not available or had been expired.")
lang.set("CANT_CALL_INVALID_USER", "User is not available.")
lang.set("CANT_CALL_INVALID_JOB", "The job is not available or had been expired.")
lang.set("CANT_CALL_EE_IS_NOT_APPLYING", "Candidate is not applying for the job.")
lang.set("CANT_CALL_ER_IS_NOT_ACCEPTING_CALL", "Employer is not accepting video call.")
lang.set("SERVICE_SEARCH_CCD_SERVICE_IS_NOT_AVAILABLE_OR_EXPIRED", "You don't have active 'Search candidate' package. Tap here to buy now!")

lang.set("YOU_HAVE_REDEEMED_CODE", "You have successfully redeemed the code ':code'.")
lang.set("YOU_HAVE_REDEEMED_CODE_DETAIL", "You have entered the code ':code' successfully.")
lang.set("YOU_HAVE_REDEEMED_CODE_REWARDS", "Rewards included: ")

lang.set("REWARD_TYPE_DIAMONS", "Diamond")
lang.set("REWARD_TYPE_SERVICE", "Service")
lang.set("REWARD_TYPE_VIP_POINTS", "VIP point")

lang.set("YOU_HAVE_REACHED_NEW_VIP_LEVEL", "Congratulations, you have reached VIP level :vipLevel")
lang.set("YOU_HAVE_REACHED_NEW_VIP_LEVEL_DESC", "Congratulations, you have reached VIP level :vipLevel")

lang.set("REDEEM_CODE_INVALID", "Code is invalid.")
lang.set("REDEEM_CODE_CANT_USE_YOUR_CODE", "Can not use your code to redeem.")

lang.set("REDEEM_CODE_REACHED_LIMIT", "This code had reached limit.")
lang.set("REDEEM_CODE_ALREADY_USED_THE_CODE", "The code had already been used.")
lang.set("STORE_ITEM_DOES_NOT_EXIST", "Store item does not exist.")
lang.set("REDEEM_CODE_ALREADY_HAS_SALE_CODE", "You have already imput another code with the same type.")



// ==== START : OnePay ====
lang.set("YOU_HAVE_SUCCESSFULLY_PAID", "You have successfully paid!")
lang.set("SUCCESSFULLY", "Successfully!")
lang.set("FAILED", "Failed!")
lang.set("APPROVED", "Approved")
lang.set("BANK_DECLINED", "Bank Declined")
lang.set("MERCHANT_NOT_EXIST", "Merchant not exist")
lang.set("INVALID_ACCESS_CODE", "Invalid access code")
lang.set("INVALID_AMOUNT", "Invalid amount")
lang.set("INVALID_CURRENCY_CODE", "Invalid currency code")
lang.set("UNSPECIFIED_FAILURE", "Unspecified Failure")
lang.set("INVALID_CARD_NUMBER", "Invalid card Number")
lang.set("INVALID_CARD_NAME", "Invalid card name")
lang.set("EXPIRED_CARD", "Expired Card")
lang.set("CARD_NOT_REGISTED_SERVICE_INTERNET_BANKING", "Card Not Registed Service(internet banking)")
lang.set("INVALID_CARD_DATE", "Invalid card date")
lang.set("EXIST_AMOUNT", "Exist Amount")
lang.set("INSUFFICIENT_FUND", "Insufficient fund")
lang.set("USER_CANCEL", "User cancel")
lang.set("FAILURED", "Failured")
lang.set("PAYMENT_COMPLETE", "The transaction is completed")
lang.set("NO_TRANSACTION_EXISTS", "No transaction exists")
// ==== END : OnePay ====

//setting
lang.set("SETTING_NOT_EXIST", "Setting not exist")

const enLangs = lang
export default enLangs


